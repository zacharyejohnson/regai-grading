# Generated by Django 5.0.4 on 2024-08-21 14:13

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Assignment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("rubric", models.JSONField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "last_viewed",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "description_file",
                    models.FileField(
                        blank=True, null=True, upload_to="assignment_descriptions/"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Syllabus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file", models.FileField(upload_to="syllabi/")),
                ("full_text", models.TextField()),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="AssignmentAgent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "agent_type",
                    models.CharField(
                        choices=[
                            ("rubric_creator", "Rubric Creator"),
                            ("grader", "Grader"),
                            ("critic", "Critic"),
                            ("reviser", "Reviser"),
                        ],
                        max_length=20,
                    ),
                ),
                ("configuration", models.JSONField(blank=True, null=True)),
                (
                    "assignment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="agents",
                        to="regai.assignment",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "instructor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="courses",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "syllabus",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="regai.syllabus",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="assignment",
            name="course",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="assignments",
                to="regai.course",
            ),
        ),
        migrations.CreateModel(
            name="Grade",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.JSONField()),
                ("human_approved", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("initial", "Initial"),
                            ("revision", "Revision"),
                            ("final", "Final"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "assignment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_items",
                        to="regai.assignment",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Rubric",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.JSONField()),
                ("human_approved", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "assignment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rubrics",
                        to="regai.assignment",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Submission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("student_name", models.CharField(max_length=255)),
                ("content", models.TextField()),
                (
                    "file",
                    models.FileField(blank=True, null=True, upload_to="submissions/"),
                ),
                ("submitted_at", models.DateTimeField(auto_now_add=True)),
                ("status", models.CharField(default="pending", max_length=20)),
                ("overall_score", models.FloatField(blank=True, null=True)),
                ("category_scores", models.JSONField(blank=True, null=True)),
                ("grading_critique", models.JSONField(blank=True, null=True)),
                ("graded_at", models.DateTimeField(blank=True, null=True)),
                (
                    "assignment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="submissions",
                        to="regai.assignment",
                    ),
                ),
                (
                    "grades",
                    models.ManyToManyField(
                        blank=True, related_name="submissions", to="regai.grade"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SCORMData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cmi_core_student_id", models.CharField(blank=True, max_length=255)),
                ("cmi_core_student_name", models.CharField(blank=True, max_length=255)),
                (
                    "cmi_core_lesson_location",
                    models.CharField(blank=True, max_length=255),
                ),
                (
                    "cmi_core_credit",
                    models.CharField(
                        choices=[("credit", "credit"), ("no-credit", "no-credit")],
                        default="credit",
                        max_length=9,
                    ),
                ),
                (
                    "cmi_core_lesson_status",
                    models.CharField(
                        choices=[
                            ("passed", "passed"),
                            ("completed", "completed"),
                            ("failed", "failed"),
                            ("incomplete", "incomplete"),
                            ("browsed", "browsed"),
                            ("not attempted", "not attempted"),
                        ],
                        default="not attempted",
                        max_length=13,
                    ),
                ),
                (
                    "cmi_core_entry",
                    models.CharField(
                        choices=[
                            ("ab-initio", "ab-initio"),
                            ("resume", "resume"),
                            ("", ""),
                        ],
                        default="",
                        max_length=9,
                    ),
                ),
                (
                    "cmi_core_score_raw",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                (
                    "cmi_core_score_min",
                    models.FloatField(
                        default=0.0,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                (
                    "cmi_core_score_max",
                    models.FloatField(
                        default=100.0,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                (
                    "cmi_core_total_time",
                    models.CharField(default="0000:00:00", max_length=13),
                ),
                (
                    "cmi_core_lesson_mode",
                    models.CharField(
                        choices=[
                            ("browse", "browse"),
                            ("normal", "normal"),
                            ("review", "review"),
                        ],
                        default="normal",
                        max_length=6,
                    ),
                ),
                (
                    "cmi_core_exit",
                    models.CharField(
                        choices=[
                            ("time-out", "time-out"),
                            ("suspend", "suspend"),
                            ("logout", "logout"),
                            ("", ""),
                        ],
                        default="",
                        max_length=8,
                    ),
                ),
                (
                    "cmi_core_session_time",
                    models.CharField(default="0000:00:00", max_length=13),
                ),
                ("cmi_suspend_data", models.TextField(blank=True)),
                ("cmi_interactions_count", models.IntegerField(default=0)),
                ("cmi_interactions", models.JSONField(default=dict)),
                ("cmi_launch_data", models.TextField(blank=True)),
                ("cmi_comments", models.TextField(blank=True)),
                ("cmi_objectives_count", models.IntegerField(default=0)),
                ("cmi_objectives", models.JSONField(default=dict)),
                (
                    "cmi_student_data_mastery_score",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "cmi_student_data_max_time_allowed",
                    models.CharField(blank=True, max_length=13),
                ),
                (
                    "cmi_student_data_time_limit_action",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("exit,message", "exit,message"),
                            ("exit,no message", "exit,no message"),
                            ("continue,message", "continue,message"),
                            ("continue,no message", "continue,no message"),
                        ],
                        max_length=19,
                    ),
                ),
                (
                    "submission",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="scorm_data",
                        to="regai.submission",
                    ),
                ),
            ],
            options={
                "verbose_name": "SCORM Data",
                "verbose_name_plural": "SCORM Data",
            },
        ),
        migrations.AddField(
            model_name="grade",
            name="submission",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_items",
                to="regai.submission",
            ),
        ),
        migrations.CreateModel(
            name="Critique",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.JSONField()),
                ("human_approved", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "revision_status",
                    models.CharField(
                        choices=[
                            ("PASS", "Pass"),
                            ("MINOR_REVISION", "Minor Revision"),
                            ("MAJOR_REVISION", "Major Revision"),
                        ],
                        default="PASS",
                        max_length=20,
                    ),
                ),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "assignment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_items",
                        to="regai.assignment",
                    ),
                ),
                (
                    "grade",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="critiques",
                        to="regai.grade",
                    ),
                ),
                (
                    "submission",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_items",
                        to="regai.submission",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
